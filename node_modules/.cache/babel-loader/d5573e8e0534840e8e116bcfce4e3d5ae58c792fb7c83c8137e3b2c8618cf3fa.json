{"ast":null,"code":"import { setSafeProperty, hasSafeProperty, getSafeProperty } from './customs.js';\nimport { isObject } from './is.js';\n\n/**\n * A map facade on a bare object.\n *\n * The small number of methods needed to implement a scope,\n * forwarding on to the SafeProperty functions. Over time, the codebase\n * will stop using this method, as all objects will be Maps, rather than\n * more security prone objects.\n */\nexport class ObjectWrappingMap {\n  constructor(object) {\n    this.wrappedObject = object;\n  }\n  keys() {\n    return Object.keys(this.wrappedObject);\n  }\n  get(key) {\n    return getSafeProperty(this.wrappedObject, key);\n  }\n  set(key, value) {\n    setSafeProperty(this.wrappedObject, key, value);\n    return this;\n  }\n  has(key) {\n    return hasSafeProperty(this.wrappedObject, key);\n  }\n}\n\n/**\n * Creates an empty map, or whatever your platform's polyfill is.\n *\n * @returns an empty Map or Map like object.\n */\nexport function createEmptyMap() {\n  return new Map();\n}\n\n/**\n * Creates a Map from the given object.\n *\n * @param { Map | { [key: string]: unknown } | undefined } mapOrObject\n * @returns\n */\nexport function createMap(mapOrObject) {\n  if (!mapOrObject) {\n    return createEmptyMap();\n  }\n  if (isMap(mapOrObject)) {\n    return mapOrObject;\n  }\n  if (isObject(mapOrObject)) {\n    return new ObjectWrappingMap(mapOrObject);\n  }\n  throw new Error('createMap can create maps from objects or Maps');\n}\n\n/**\n * Unwraps a map into an object.\n *\n * @param {Map} map\n * @returns { [key: string]: unknown }\n */\nexport function toObject(map) {\n  if (map instanceof ObjectWrappingMap) {\n    return map.wrappedObject;\n  }\n  var object = {};\n  for (var key of map.keys()) {\n    var value = map.get(key);\n    setSafeProperty(object, key, value);\n  }\n  return object;\n}\n\n/**\n * Returns `true` if the passed object appears to be a Map (i.e. duck typing).\n *\n * Methods looked for are `get`, `set`, `keys` and `has`.\n *\n * @param {Map | object} object\n * @returns\n */\nexport function isMap(object) {\n  // We can use the fast instanceof, or a slower duck typing check.\n  // The duck typing method needs to cover enough methods to not be confused with DenseMatrix.\n  if (!object) {\n    return false;\n  }\n  return object instanceof Map || object instanceof ObjectWrappingMap || typeof object.set === 'function' && typeof object.get === 'function' && typeof object.keys === 'function' && typeof object.has === 'function';\n}\n\n/**\n * Copies the contents of key-value pairs from each `objects` in to `map`.\n *\n * Object is `objects` can be a `Map` or object.\n *\n * This is the `Map` analog to `Object.assign`.\n */\nexport function assign(map) {\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n  for (var args of objects) {\n    if (!args) {\n      continue;\n    }\n    if (isMap(args)) {\n      for (var key of args.keys()) {\n        map.set(key, args.get(key));\n      }\n    } else if (isObject(args)) {\n      for (var _key2 of Object.keys(args)) {\n        map.set(_key2, args[_key2]);\n      }\n    }\n  }\n  return map;\n}","map":{"version":3,"names":["setSafeProperty","hasSafeProperty","getSafeProperty","isObject","ObjectWrappingMap","constructor","object","wrappedObject","keys","Object","get","key","set","value","has","createEmptyMap","Map","createMap","mapOrObject","isMap","Error","toObject","map","assign","_len","arguments","length","objects","Array","_key","args","_key2"],"sources":["/Users/alexgeldash/Projects/js-easy-windows-calculator/node_modules/mathjs/lib/esm/utils/map.js"],"sourcesContent":["import { setSafeProperty, hasSafeProperty, getSafeProperty } from './customs.js';\nimport { isObject } from './is.js';\n\n/**\n * A map facade on a bare object.\n *\n * The small number of methods needed to implement a scope,\n * forwarding on to the SafeProperty functions. Over time, the codebase\n * will stop using this method, as all objects will be Maps, rather than\n * more security prone objects.\n */\nexport class ObjectWrappingMap {\n  constructor(object) {\n    this.wrappedObject = object;\n  }\n  keys() {\n    return Object.keys(this.wrappedObject);\n  }\n  get(key) {\n    return getSafeProperty(this.wrappedObject, key);\n  }\n  set(key, value) {\n    setSafeProperty(this.wrappedObject, key, value);\n    return this;\n  }\n  has(key) {\n    return hasSafeProperty(this.wrappedObject, key);\n  }\n}\n\n/**\n * Creates an empty map, or whatever your platform's polyfill is.\n *\n * @returns an empty Map or Map like object.\n */\nexport function createEmptyMap() {\n  return new Map();\n}\n\n/**\n * Creates a Map from the given object.\n *\n * @param { Map | { [key: string]: unknown } | undefined } mapOrObject\n * @returns\n */\nexport function createMap(mapOrObject) {\n  if (!mapOrObject) {\n    return createEmptyMap();\n  }\n  if (isMap(mapOrObject)) {\n    return mapOrObject;\n  }\n  if (isObject(mapOrObject)) {\n    return new ObjectWrappingMap(mapOrObject);\n  }\n  throw new Error('createMap can create maps from objects or Maps');\n}\n\n/**\n * Unwraps a map into an object.\n *\n * @param {Map} map\n * @returns { [key: string]: unknown }\n */\nexport function toObject(map) {\n  if (map instanceof ObjectWrappingMap) {\n    return map.wrappedObject;\n  }\n  var object = {};\n  for (var key of map.keys()) {\n    var value = map.get(key);\n    setSafeProperty(object, key, value);\n  }\n  return object;\n}\n\n/**\n * Returns `true` if the passed object appears to be a Map (i.e. duck typing).\n *\n * Methods looked for are `get`, `set`, `keys` and `has`.\n *\n * @param {Map | object} object\n * @returns\n */\nexport function isMap(object) {\n  // We can use the fast instanceof, or a slower duck typing check.\n  // The duck typing method needs to cover enough methods to not be confused with DenseMatrix.\n  if (!object) {\n    return false;\n  }\n  return object instanceof Map || object instanceof ObjectWrappingMap || typeof object.set === 'function' && typeof object.get === 'function' && typeof object.keys === 'function' && typeof object.has === 'function';\n}\n\n/**\n * Copies the contents of key-value pairs from each `objects` in to `map`.\n *\n * Object is `objects` can be a `Map` or object.\n *\n * This is the `Map` analog to `Object.assign`.\n */\nexport function assign(map) {\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n  for (var args of objects) {\n    if (!args) {\n      continue;\n    }\n    if (isMap(args)) {\n      for (var key of args.keys()) {\n        map.set(key, args.get(key));\n      }\n    } else if (isObject(args)) {\n      for (var _key2 of Object.keys(args)) {\n        map.set(_key2, args[_key2]);\n      }\n    }\n  }\n  return map;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}