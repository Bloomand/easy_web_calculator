{"ast":null,"code":"import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    on,\n    config\n  } = _ref;\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: Decimal.EUCLID\n  });\n  BigNumber.prototype = Object.create(BigNumber.prototype);\n\n  /**\n   * Attach type information\n   */\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n  return BigNumber;\n}, {\n  isClass: true\n});","map":{"version":3,"names":["Decimal","factory","name","dependencies","createBigNumberClass","_ref","on","config","BigNumber","clone","precision","modulo","EUCLID","prototype","Object","create","type","isBigNumber","toJSON","mathjs","value","toString","fromJSON","json","curr","prev","isClass"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js"],"sourcesContent":["import Decimal from 'decimal.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nexport var createBigNumberClass = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    on,\n    config\n  } = _ref;\n  var BigNumber = Decimal.clone({\n    precision: config.precision,\n    modulo: Decimal.EUCLID\n  });\n  BigNumber.prototype = Object.create(BigNumber.prototype);\n\n  /**\n   * Attach type information\n   */\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n  return BigNumber;\n}, {\n  isClass: true\n});"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAChC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,IAAIC,IAAI,GAAG,WAAW;AACtB,IAAIC,YAAY,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;AACpC,OAAO,IAAIC,oBAAoB,GAAG,eAAeH,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACnF,IAAI;IACFC,EAAE;IACFC;EACF,CAAC,GAAGF,IAAI;EACR,IAAIG,SAAS,GAAGR,OAAO,CAACS,KAAK,CAAC;IAC5BC,SAAS,EAAEH,MAAM,CAACG,SAAS;IAC3BC,MAAM,EAAEX,OAAO,CAACY;EAClB,CAAC,CAAC;EACFJ,SAAS,CAACK,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACP,SAAS,CAACK,SAAS,CAAC;;EAExD;AACF;AACA;EACEL,SAAS,CAACK,SAAS,CAACG,IAAI,GAAG,WAAW;EACtCR,SAAS,CAACK,SAAS,CAACI,WAAW,GAAG,IAAI;;EAEtC;AACF;AACA;AACA;AACA;AACA;EACET,SAAS,CAACK,SAAS,CAACK,MAAM,GAAG,YAAY;IACvC,OAAO;MACLC,MAAM,EAAE,WAAW;MACnBC,KAAK,EAAE,IAAI,CAACC,QAAQ;IACtB,CAAC;EACH,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACEb,SAAS,CAACc,QAAQ,GAAG,UAAUC,IAAI,EAAE;IACnC,OAAO,IAAIf,SAAS,CAACe,IAAI,CAACH,KAAK,CAAC;EAClC,CAAC;EACD,IAAId,EAAE,EAAE;IACN;IACAA,EAAE,CAAC,QAAQ,EAAE,UAAUkB,IAAI,EAAEC,IAAI,EAAE;MACjC,IAAID,IAAI,CAACd,SAAS,KAAKe,IAAI,CAACf,SAAS,EAAE;QACrCF,SAAS,CAACD,MAAM,CAAC;UACfG,SAAS,EAAEc,IAAI,CAACd;QAClB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EACA,OAAOF,SAAS;AAClB,CAAC,EAAE;EACDkB,OAAO,EAAE;AACX,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}