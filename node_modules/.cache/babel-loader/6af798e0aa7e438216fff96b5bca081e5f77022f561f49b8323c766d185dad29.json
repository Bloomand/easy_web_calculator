{"ast":null,"code":"var _jsxFileName = \"/Users/alexgeldash/Projects/calculator/src/components/pages/MainPage/MainPage.jsx\";\nimport React, { useState } from 'react';\nimport { create, all } from 'mathjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {};\nconst math = create(all, config);\nconst numKeys = [\"%\", \"CE\", \"C\", \"←\", \"1/x\", \"x²\", \"√x\", \"÷\", \"7\", \"8\", \"9\", \"×\", \"4\", \"5\", \"6\", \"-\", \"1\", \"2\", \"3\", \"+\", \"+/-\", \"0\", \".\", \"=\"];\nconst [phrase, setPhrase] = useState(\"10.5+5^2\");\nconst [currentNum, setCurrentNum] = useState(\"10\");\nlet listBut = [];\nfor (let i = 0; i < numKeys.length; i++) {\n  let styleN = '';\n  if (numKeys[i] == \"=\") {\n    listBut.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonKey\",\n      value: numKeys[i],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"textButton\",\n        onClick: () => evaluatePhrase(phrase),\n        children: numKeys[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 68\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }, this));\n  } else {\n    if (i < 7 || i % 4 == 3) {\n      styleN = 'buttonElse';\n    }\n    listBut.push( /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styleN,\n      value: numKeys[i],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"textButton\",\n        children: numKeys[i]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this));\n  }\n}\nconst evaluatePhrase = phrase => {\n  alert(math.evaluate(phrase));\n};\nconst inputChange = event => {\n  setPhrase(event);\n  console.log(event);\n};\nexport const MainPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Title\",\n      children: \"Standart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"viewPhr\",\n      children: phrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Screen\",\n      type: \"text\",\n      value: currentNum,\n      onChange: event => inputChange(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Item\",\n      children: listBut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","create","all","jsxDEV","_jsxDEV","config","math","numKeys","phrase","setPhrase","currentNum","setCurrentNum","listBut","i","length","styleN","push","className","value","children","onClick","evaluatePhrase","fileName","_jsxFileName","lineNumber","columnNumber","alert","evaluate","inputChange","event","console","log","MainPage","type","onChange","target","_c","$RefreshReg$"],"sources":["/Users/alexgeldash/Projects/calculator/src/components/pages/MainPage/MainPage.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { create, all } from 'mathjs'\r\n\r\nconst config = { }\r\nconst math = create(all, config)\r\n\r\n\r\nconst numKeys = [\"%\", \"CE\", \"C\", \"←\", \"1/x\", \"x²\", \"√x\", \"÷\", \"7\", \"8\", \"9\", \"×\", \"4\", \"5\", \"6\", \"-\", \"1\", \"2\", \"3\", \"+\", \"+/-\", \"0\", \".\", \"=\"];\r\n\r\nconst [phrase, setPhrase] = useState(\"10.5+5^2\");\r\nconst [currentNum, setCurrentNum] = useState(\"10\");\r\n\r\nlet listBut = [];\r\nfor(let i =0;i<numKeys.length;i++){\r\n  let styleN = ''\r\n  if(numKeys[i] == \"=\"){\r\n    listBut.push( <button className=\"buttonKey\" value={numKeys[i]}><p className='textButton' onClick={() => evaluatePhrase(phrase)}>{numKeys[i]}</p></button>);\r\n  }else{\r\n    if(i<7 || i%4==3){\r\n      styleN='buttonElse';\r\n    }\r\n    listBut.push( <button className={styleN} value={numKeys[i]}><p className='textButton'>{numKeys[i]}</p></button>);\r\n  }\r\n}\r\nconst evaluatePhrase = (phrase) => {\r\n  alert(math.evaluate(phrase));\r\n}\r\nconst inputChange = (event) => {\r\n  setPhrase(event);\r\n  console.log(event);\r\n}\r\n\r\n\r\nexport const MainPage = () => {\r\n  return (\r\n    <div className='Content'>\r\n        <div className='logo'></div>\r\n        <p className='Title'>Standart</p>\r\n        <p className='viewPhr'>{phrase}</p>\r\n        <input className='Screen' type='text' value={currentNum} onChange={event => inputChange(event.target.value)}></input>\r\n        <div className='Item'>{listBut}</div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}