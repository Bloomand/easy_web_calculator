{"ast":null,"code":"var _jsxFileName = \"/Users/alexgeldash/Projects/calculator/src/components/pages/MainPage/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { create, all, parse } from 'mathjs';\nimport { ReactDOM } from 'react';\nimport { render } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = {};\nconst math = create(all, config);\nconst numKeys = [[\"%\", 0], [\"CE\", 0], [\"C\", 0], [\"←\", 0], [\"1/x\", 0], [\"x²\", 0], [\"√x\", 0], [\"÷\", 0], [\"7\", 1], [\"8\", 1], [\"9\", 1], [\"×\", 0], [\"4\", 1], [\"5\", 1], [\"6\", 1], [\"-\", 0], [\"1\", 1], [\"2\", 1], [\"3\", 1], [\"+\", 0], [\"+/-\", 0], [\"0\", 1], [\".\", 0], [\"=\", 0]];\nexport const MainPage = () => {\n  _s();\n  let res = 0;\n  const [flag, setFlag] = useState(0);\n  const [phrase, setPhrase] = useState(\"\");\n  const [currentNum, setNum] = useState(\"\");\n  let listBut = [];\n  for (let i = 0; i < numKeys.length; i++) {\n    let styleN = '';\n    if (numKeys[i][0] == \"=\") {\n      listBut.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonKey\",\n        value: numKeys[i][0],\n        onClick: () => evaluatePhrase(),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"textButton\",\n          children: numKeys[i][0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 105\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this));\n    } else {\n      if (i < 7 || i % 4 == 3) {\n        styleN = 'buttonElse';\n      }\n      if (numKeys[i][1] == \"1\") {\n        listBut.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styleN,\n          value: numKeys[i][0],\n          onClick: () => addNumber(numKeys[i][0]),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textButton\",\n            children: numKeys[i][0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 113\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }, this));\n      } else {\n        listBut.push( /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styleN,\n          value: numKeys[i][0],\n          onClick: () => choiceArif(numKeys[i][0]),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textButton\",\n            children: numKeys[i][0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 114\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }, this));\n      }\n    }\n  }\n  const evaluatePhrase = () => {\n    setPhrase(phrase + currentNum);\n    setNum(\"\");\n    setFlag(0);\n    setPhrase(math.evaluate(phrase));\n    console.log(phrase);\n  };\n  const addNumber = num => {\n    setNum(currentNum + num);\n    setFlag(0);\n  };\n  const choiceArif = num => {\n    if (num == \"C\") {\n      setNum(\"\");\n    } else if (num == \"CE\") {\n      setPhrase(\"\");\n    } else if (num == \"+\") {\n      if (flag == 0) {\n        setPhrase(phrase + currentNum + num);\n        setFlag(1);\n        setNum(\"\");\n      } else if (flag == 1) {\n        setPhrase(phrase.slice(0, -1) + currentNum + num);\n        setNum(\"\");\n      }\n    } else if (num == \"-\") {\n      if (flag == 0) {\n        setPhrase(phrase + currentNum + num);\n        setFlag(1);\n        setNum(\"\");\n      } else if (flag == 1) {\n        setPhrase(phrase.slice(0, -1) + currentNum + num);\n        setNum(\"\");\n      }\n    } else if (num == \"×\") {\n      if (flag == 0) {\n        setPhrase(phrase + currentNum + \"*\");\n        setFlag(1);\n        setNum(\"\");\n      } else if (flag == 1) {\n        setPhrase(phrase.slice(0, -1) + currentNum + num);\n        setNum(\"\");\n      }\n    } else if (num == \"÷\") {\n      if (flag == 0) {\n        setPhrase(phrase + currentNum + \"/\");\n        setFlag(1);\n        setNum(\"\");\n      } else if (flag == 1) {\n        setPhrase(phrase.slice(0, -1) + currentNum + num);\n        setNum(\"\");\n      }\n    }\n  };\n  const inputChange = event => {\n    setPhrase(phrase + event);\n    setNum(event);\n    console.log(currentNum);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Title\",\n      children: \"Standart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"viewPhr\",\n      children: phrase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Screen\",\n      children: currentNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Item\",\n      children: listBut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"WNv0LpqGkX3RPuS9jjvguJzN2Yo=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","create","all","parse","ReactDOM","render","jsxDEV","_jsxDEV","config","math","numKeys","MainPage","_s","res","flag","setFlag","phrase","setPhrase","currentNum","setNum","listBut","i","length","styleN","push","className","value","onClick","evaluatePhrase","children","fileName","_jsxFileName","lineNumber","columnNumber","addNumber","choiceArif","evaluate","console","log","num","slice","inputChange","event","_c","$RefreshReg$"],"sources":["/Users/alexgeldash/Projects/calculator/src/components/pages/MainPage/MainPage.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { create, all, parse } from 'mathjs'\r\nimport { ReactDOM } from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nconst config = { }\r\nconst math = create(all, config)\r\n\r\n\r\nconst numKeys = [[\"%\",0], [\"CE\",0], [\"C\",0], [\"←\",0], [\"1/x\",0], [\"x²\",0], [\"√x\",0], [\"÷\",0], [\"7\",1], [\"8\",1], [\"9\",1], [\"×\",0], [\"4\",1], [\"5\",1], [\"6\",1], [\"-\",0], [\"1\",1], [\"2\",1], [\"3\",1], [\"+\",0], [\"+/-\",0], [\"0\",1], [\".\",0], [\"=\",0]];\r\n\r\n\r\n\r\n\r\nexport const MainPage = () => {\r\n  let res = 0;\r\n  const [flag, setFlag] = useState(0);\r\n\r\n  const [phrase, setPhrase] = useState(\"\");\r\n  const [currentNum, setNum] = useState(\"\");\r\n\r\n  let listBut = [];\r\n  for(let i =0;i<numKeys.length;i++){\r\n    let styleN = ''\r\n    if(numKeys[i][0] == \"=\"){\r\n     listBut.push( <button className=\"buttonKey\" value={numKeys[i][0]} onClick={() => evaluatePhrase()}><p className='textButton'>{numKeys[i][0]}</p></button>);\r\n    }else{\r\n      if(i<7 || i%4==3){\r\n        styleN='buttonElse';\r\n      }\r\n      if(numKeys[i][1] == \"1\"){\r\n        listBut.push( <button className={styleN} value={numKeys[i][0]} onClick={() => addNumber(numKeys[i][0])}><p className='textButton'>{numKeys[i][0]}</p></button>);\r\n      }else{\r\n        listBut.push( <button className={styleN} value={numKeys[i][0]} onClick={() => choiceArif(numKeys[i][0])}><p className='textButton'>{numKeys[i][0]}</p></button>);\r\n      }\r\n    }\r\n  }\r\n  const evaluatePhrase = () => {\r\n    setPhrase(phrase+currentNum);\r\n    setNum(\"\");\r\n    setFlag(0);\r\n    setPhrase(math.evaluate(phrase));\r\n    console.log(phrase);\r\n  }\r\n  const addNumber = (num) => {\r\n    setNum(currentNum+num);\r\n    setFlag(0);\r\n  }\r\n  const choiceArif = (num) => {\r\n    if(num==\"C\"){\r\n      setNum(\"\");\r\n    }else if(num==\"CE\"){\r\n      setPhrase(\"\");\r\n    }else if(num==\"+\"){\r\n      if(flag==0){\r\n        setPhrase(phrase+currentNum+num);\r\n        setFlag(1);\r\n        setNum(\"\");\r\n      }else if(flag==1){\r\n        setPhrase(phrase.slice(0, -1)+currentNum+num);\r\n        setNum(\"\");\r\n      }\r\n    }else if(num==\"-\"){\r\n      if(flag==0){\r\n        setPhrase(phrase+currentNum+num);\r\n        setFlag(1);\r\n        setNum(\"\");\r\n      }else if(flag==1){\r\n        setPhrase(phrase.slice(0, -1)+currentNum+num);\r\n        setNum(\"\");\r\n      }\r\n    }else if(num==\"×\"){\r\n      if(flag==0){\r\n        setPhrase(phrase+currentNum+\"*\");\r\n        setFlag(1);\r\n        setNum(\"\");\r\n      }else if(flag==1){\r\n        setPhrase(phrase.slice(0, -1)+currentNum+num);\r\n        setNum(\"\");\r\n      }\r\n    }else if(num==\"÷\"){\r\n      if(flag==0){\r\n        setPhrase(phrase+currentNum+\"/\");\r\n        setFlag(1);\r\n        setNum(\"\");\r\n      }else if(flag==1){\r\n        setPhrase(phrase.slice(0, -1)+currentNum+num);\r\n        setNum(\"\");\r\n      }\r\n    }\r\n  }\r\n  const inputChange = (event) => {\r\n    setPhrase(phrase + event);\r\n    setNum(event);\r\n    console.log(currentNum);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='Content'>\r\n        <div className='logo'></div>\r\n        <p className='Title'>Standart</p>\r\n        <p className='viewPhr'>{phrase}</p>\r\n        <div className='Screen'>{currentNum}</div>\r\n        <div className='Item'>{listBut}</div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}