{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createSum } from '../../function/statistics/sum.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\n\n/**\n * Attach a transform function to math.sum\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function sum\n * from one-based to zero based\n */\nvar name = 'sum';\nvar dependencies = ['typed', 'config', 'add', 'numeric'];\nexport var createSumTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    add,\n    numeric\n  } = _ref;\n  var sum = createSum({\n    typed,\n    config,\n    add,\n    numeric\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return sum.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createSum","lastDimToZeroBase","name","dependencies","createSumTransform","_ref","typed","config","add","numeric","sum","any","args","apply","err","isTransformFunction"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/expression/transform/sum.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createSum } from '../../function/statistics/sum.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\n\n/**\n * Attach a transform function to math.sum\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function sum\n * from one-based to zero based\n */\nvar name = 'sum';\nvar dependencies = ['typed', 'config', 'add', 'numeric'];\nexport var createSumTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    config,\n    add,\n    numeric\n  } = _ref;\n  var sum = createSum({\n    typed,\n    config,\n    add,\n    numeric\n  });\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return sum.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,SAASC,iBAAiB,QAAQ,8BAA8B;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC;AACxD,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACjF,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,GAAG;IACHC;EACF,CAAC,GAAGJ,IAAI;EACR,IAAIK,GAAG,GAAGV,SAAS,CAAC;IAClBM,KAAK;IACLC,MAAM;IACNC,GAAG;IACHC;EACF,CAAC,CAAC;EACF,OAAOH,KAAK,CAACJ,IAAI,EAAE;IACjB,QAAQ,EAAE,SAASS,GAAGA,CAACC,IAAI,EAAE;MAC3BA,IAAI,GAAGX,iBAAiB,CAACW,IAAI,CAAC;MAC9B,IAAI;QACF,OAAOF,GAAG,CAACG,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,MAAMf,cAAc,CAACe,GAAG,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDC,mBAAmB,EAAE;AACvB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}