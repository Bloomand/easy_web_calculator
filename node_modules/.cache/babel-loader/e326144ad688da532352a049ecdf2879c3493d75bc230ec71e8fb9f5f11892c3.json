{"ast":null,"code":"import { factory } from '../../../utils/factory.js';\nvar name = 'schur';\nvar dependencies = ['typed', 'matrix', 'identity', 'multiply', 'qr', 'norm', 'subtract'];\nexport var createSchur = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    identity,\n    multiply,\n    qr,\n    norm,\n    subtract\n  } = _ref;\n  /**\n   *\n   * Performs a real Schur decomposition of the real matrix A = UTU' where U is orthogonal\n   * and T is upper quasi-triangular.\n   * https://en.wikipedia.org/wiki/Schur_decomposition\n   *\n   * Syntax:\n   *\n   *     math.schur(A)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 0], [-4, 3]]\n   *     math.schur(A) // returns {T: [[3, 4], [0, 1]], R: [[0, 1], [-1, 0]]}\n   *\n   * See also:\n   *\n   *     sylvester, lyap, qr\n   *\n   * @param {Array | Matrix} A  Matrix A\n   * @return {{U: Array | Matrix, T: Array | Matrix}} Object containing both matrix U and T of the Schur Decomposition A=UTU'\n   */\n  return typed(name, {\n    Array: function Array(X) {\n      var r = _schur(matrix(X));\n      return {\n        U: r.U.valueOf(),\n        T: r.T.valueOf()\n      };\n    },\n    Matrix: function Matrix(X) {\n      return _schur(X);\n    }\n  });\n  function _schur(X) {\n    var n = X.size()[0];\n    var A = X;\n    var U = identity(n);\n    var k = 0;\n    var A0;\n    do {\n      A0 = A;\n      var QR = qr(A);\n      var Q = QR.Q;\n      var R = QR.R;\n      A = multiply(R, Q);\n      U = multiply(U, Q);\n      if (k++ > 100) {\n        break;\n      }\n    } while (norm(subtract(A, A0)) > 1e-4);\n    return {\n      U,\n      T: A\n    };\n  }\n});","map":{"version":3,"names":["factory","name","dependencies","createSchur","_ref","typed","matrix","identity","multiply","qr","norm","subtract","Array","X","r","_schur","U","valueOf","T","Matrix","n","size","A","k","A0","QR","Q","R"],"sources":["/Users/alexgeldash/Projects/js-easy-windows-calculator/node_modules/mathjs/lib/esm/function/algebra/decomposition/schur.js"],"sourcesContent":["import { factory } from '../../../utils/factory.js';\nvar name = 'schur';\nvar dependencies = ['typed', 'matrix', 'identity', 'multiply', 'qr', 'norm', 'subtract'];\nexport var createSchur = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    identity,\n    multiply,\n    qr,\n    norm,\n    subtract\n  } = _ref;\n  /**\n   *\n   * Performs a real Schur decomposition of the real matrix A = UTU' where U is orthogonal\n   * and T is upper quasi-triangular.\n   * https://en.wikipedia.org/wiki/Schur_decomposition\n   *\n   * Syntax:\n   *\n   *     math.schur(A)\n   *\n   * Examples:\n   *\n   *     const A = [[1, 0], [-4, 3]]\n   *     math.schur(A) // returns {T: [[3, 4], [0, 1]], R: [[0, 1], [-1, 0]]}\n   *\n   * See also:\n   *\n   *     sylvester, lyap, qr\n   *\n   * @param {Array | Matrix} A  Matrix A\n   * @return {{U: Array | Matrix, T: Array | Matrix}} Object containing both matrix U and T of the Schur Decomposition A=UTU'\n   */\n  return typed(name, {\n    Array: function Array(X) {\n      var r = _schur(matrix(X));\n      return {\n        U: r.U.valueOf(),\n        T: r.T.valueOf()\n      };\n    },\n    Matrix: function Matrix(X) {\n      return _schur(X);\n    }\n  });\n  function _schur(X) {\n    var n = X.size()[0];\n    var A = X;\n    var U = identity(n);\n    var k = 0;\n    var A0;\n    do {\n      A0 = A;\n      var QR = qr(A);\n      var Q = QR.Q;\n      var R = QR.R;\n      A = multiply(R, Q);\n      U = multiply(U, Q);\n      if (k++ > 100) {\n        break;\n      }\n    } while (norm(subtract(A, A0)) > 1e-4);\n    return {\n      U,\n      T: A\n    };\n  }\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,2BAA2B;AACnD,IAAIC,IAAI,GAAG,OAAO;AAClB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC;AACxF,OAAO,IAAIC,WAAW,GAAG,eAAeH,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EAC1E,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACRC,EAAE;IACFC,IAAI;IACJC;EACF,CAAC,GAAGP,IAAI;EACR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,KAAK,CAACJ,IAAI,EAAE;IACjBW,KAAK,EAAE,SAASA,KAAKA,CAACC,CAAC,EAAE;MACvB,IAAIC,CAAC,GAAGC,MAAM,CAACT,MAAM,CAACO,CAAC,CAAC,CAAC;MACzB,OAAO;QACLG,CAAC,EAAEF,CAAC,CAACE,CAAC,CAACC,OAAO,EAAE;QAChBC,CAAC,EAAEJ,CAAC,CAACI,CAAC,CAACD,OAAO;MAChB,CAAC;IACH,CAAC;IACDE,MAAM,EAAE,SAASA,MAAMA,CAACN,CAAC,EAAE;MACzB,OAAOE,MAAM,CAACF,CAAC,CAAC;IAClB;EACF,CAAC,CAAC;EACF,SAASE,MAAMA,CAACF,CAAC,EAAE;IACjB,IAAIO,CAAC,GAAGP,CAAC,CAACQ,IAAI,EAAE,CAAC,CAAC,CAAC;IACnB,IAAIC,CAAC,GAAGT,CAAC;IACT,IAAIG,CAAC,GAAGT,QAAQ,CAACa,CAAC,CAAC;IACnB,IAAIG,CAAC,GAAG,CAAC;IACT,IAAIC,EAAE;IACN,GAAG;MACDA,EAAE,GAAGF,CAAC;MACN,IAAIG,EAAE,GAAGhB,EAAE,CAACa,CAAC,CAAC;MACd,IAAII,CAAC,GAAGD,EAAE,CAACC,CAAC;MACZ,IAAIC,CAAC,GAAGF,EAAE,CAACE,CAAC;MACZL,CAAC,GAAGd,QAAQ,CAACmB,CAAC,EAAED,CAAC,CAAC;MAClBV,CAAC,GAAGR,QAAQ,CAACQ,CAAC,EAAEU,CAAC,CAAC;MAClB,IAAIH,CAAC,EAAE,GAAG,GAAG,EAAE;QACb;MACF;IACF,CAAC,QAAQb,IAAI,CAACC,QAAQ,CAACW,CAAC,EAAEE,EAAE,CAAC,CAAC,GAAG,IAAI;IACrC,OAAO;MACLR,CAAC;MACDE,CAAC,EAAEI;IACL,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}