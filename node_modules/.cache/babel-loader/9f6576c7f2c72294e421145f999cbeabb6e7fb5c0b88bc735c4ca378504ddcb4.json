{"ast":null,"code":"/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  } else {\n    this.min = min;\n    this.max = max;\n  }\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  } else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n  this.stack = new Error().stack;\n}\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;","map":{"version":3,"names":["IndexError","index","min","max","SyntaxError","arguments","length","undefined","message","stack","Error","prototype","RangeError","constructor","name","isIndexError"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/error/IndexError.js"],"sourcesContent":["/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  } else {\n    this.min = min;\n    this.max = max;\n  }\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  } else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n  this.stack = new Error().stack;\n}\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAC1C,IAAI,EAAE,IAAI,YAAYH,UAAU,CAAC,EAAE;IACjC,MAAM,IAAII,WAAW,CAAC,kDAAkD,CAAC;EAC3E;EACA,IAAI,CAACH,KAAK,GAAGA,KAAK;EAClB,IAAII,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACxB,IAAI,CAACJ,GAAG,GAAG,CAAC;IACZ,IAAI,CAACC,GAAG,GAAGD,GAAG;EAChB,CAAC,MAAM;IACL,IAAI,CAACA,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;EACA,IAAI,IAAI,CAACD,GAAG,KAAKK,SAAS,IAAI,IAAI,CAACN,KAAK,GAAG,IAAI,CAACC,GAAG,EAAE;IACnD,IAAI,CAACM,OAAO,GAAG,sBAAsB,GAAG,IAAI,CAACP,KAAK,GAAG,KAAK,GAAG,IAAI,CAACC,GAAG,GAAG,GAAG;EAC7E,CAAC,MAAM,IAAI,IAAI,CAACC,GAAG,KAAKI,SAAS,IAAI,IAAI,CAACN,KAAK,IAAI,IAAI,CAACE,GAAG,EAAE;IAC3D,IAAI,CAACK,OAAO,GAAG,sBAAsB,GAAG,IAAI,CAACP,KAAK,GAAG,KAAK,IAAI,IAAI,CAACE,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;EACnF,CAAC,MAAM;IACL,IAAI,CAACK,OAAO,GAAG,sBAAsB,GAAG,IAAI,CAACP,KAAK,GAAG,GAAG;EAC1D;EACA,IAAI,CAACQ,KAAK,GAAG,IAAIC,KAAK,EAAE,CAACD,KAAK;AAChC;AACAT,UAAU,CAACW,SAAS,GAAG,IAAIC,UAAU,EAAE;AACvCZ,UAAU,CAACW,SAAS,CAACE,WAAW,GAAGD,UAAU;AAC7CZ,UAAU,CAACW,SAAS,CAACG,IAAI,GAAG,YAAY;AACxCd,UAAU,CAACW,SAAS,CAACI,YAAY,GAAG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}