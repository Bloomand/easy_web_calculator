{"ast":null,"code":"import { eDocs } from './constants/e.js';\nimport { falseDocs } from './constants/false.js';\nimport { iDocs } from './constants/i.js';\nimport { InfinityDocs } from './constants/Infinity.js';\nimport { LN10Docs } from './constants/LN10.js';\nimport { LN2Docs } from './constants/LN2.js';\nimport { LOG10EDocs } from './constants/LOG10E.js';\nimport { LOG2EDocs } from './constants/LOG2E.js';\nimport { NaNDocs } from './constants/NaN.js';\nimport { nullDocs } from './constants/null.js';\nimport { phiDocs } from './constants/phi.js';\nimport { piDocs } from './constants/pi.js';\nimport { SQRT12Docs } from './constants/SQRT1_2.js';\nimport { SQRT2Docs } from './constants/SQRT2.js';\nimport { tauDocs } from './constants/tau.js';\nimport { trueDocs } from './constants/true.js';\nimport { versionDocs } from './constants/version.js';\nimport { bignumberDocs } from './construction/bignumber.js';\nimport { booleanDocs } from './construction/boolean.js';\nimport { complexDocs } from './construction/complex.js';\nimport { createUnitDocs } from './construction/createUnit.js';\nimport { fractionDocs } from './construction/fraction.js';\nimport { indexDocs } from './construction/index.js';\nimport { matrixDocs } from './construction/matrix.js';\nimport { numberDocs } from './construction/number.js';\nimport { sparseDocs } from './construction/sparse.js';\nimport { splitUnitDocs } from './construction/splitUnit.js';\nimport { stringDocs } from './construction/string.js';\nimport { unitDocs } from './construction/unit.js';\nimport { configDocs } from './core/config.js';\nimport { importDocs } from './core/import.js';\nimport { typedDocs } from './core/typed.js';\nimport { derivativeDocs } from './function/algebra/derivative.js';\nimport { leafCountDocs } from './function/algebra/leafCount.js';\nimport { lsolveDocs } from './function/algebra/lsolve.js';\nimport { lsolveAllDocs } from './function/algebra/lsolveAll.js';\nimport { lupDocs } from './function/algebra/lup.js';\nimport { lusolveDocs } from './function/algebra/lusolve.js';\nimport { polynomialRootDocs } from './function/algebra/polynomialRoot.js';\nimport { qrDocs } from './function/algebra/qr.js';\nimport { rationalizeDocs } from './function/algebra/rationalize.js';\nimport { resolveDocs } from './function/algebra/resolve.js';\nimport { simplifyDocs } from './function/algebra/simplify.js';\nimport { simplifyConstantDocs } from './function/algebra/simplifyConstant.js';\nimport { simplifyCoreDocs } from './function/algebra/simplifyCore.js';\nimport { sluDocs } from './function/algebra/slu.js';\nimport { symbolicEqualDocs } from './function/algebra/symbolicEqual.js';\nimport { usolveDocs } from './function/algebra/usolve.js';\nimport { usolveAllDocs } from './function/algebra/usolveAll.js';\nimport { absDocs } from './function/arithmetic/abs.js';\nimport { addDocs } from './function/arithmetic/add.js';\nimport { cbrtDocs } from './function/arithmetic/cbrt.js';\nimport { ceilDocs } from './function/arithmetic/ceil.js';\nimport { cubeDocs } from './function/arithmetic/cube.js';\nimport { divideDocs } from './function/arithmetic/divide.js';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide.js';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply.js';\nimport { dotPowDocs } from './function/arithmetic/dotPow.js';\nimport { expDocs } from './function/arithmetic/exp.js';\nimport { expmDocs } from './function/arithmetic/expm.js';\nimport { expm1Docs } from './function/arithmetic/expm1.js';\nimport { fixDocs } from './function/arithmetic/fix.js';\nimport { floorDocs } from './function/arithmetic/floor.js';\nimport { gcdDocs } from './function/arithmetic/gcd.js';\nimport { hypotDocs } from './function/arithmetic/hypot.js';\nimport { invmodDocs } from './function/arithmetic/invmod.js';\nimport { lcmDocs } from './function/arithmetic/lcm.js';\nimport { logDocs } from './function/arithmetic/log.js';\nimport { log10Docs } from './function/arithmetic/log10.js';\nimport { log1pDocs } from './function/arithmetic/log1p.js';\nimport { log2Docs } from './function/arithmetic/log2.js';\nimport { modDocs } from './function/arithmetic/mod.js';\nimport { multiplyDocs } from './function/arithmetic/multiply.js';\nimport { normDocs } from './function/arithmetic/norm.js';\nimport { nthRootDocs } from './function/arithmetic/nthRoot.js';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots.js';\nimport { powDocs } from './function/arithmetic/pow.js';\nimport { roundDocs } from './function/arithmetic/round.js';\nimport { signDocs } from './function/arithmetic/sign.js';\nimport { sqrtDocs } from './function/arithmetic/sqrt.js';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm.js';\nimport { sylvesterDocs } from './function/matrix/sylvester.js';\nimport { schurDocs } from './function/matrix/schur.js';\nimport { lyapDocs } from './function/matrix/lyap.js';\nimport { squareDocs } from './function/arithmetic/square.js';\nimport { subtractDocs } from './function/arithmetic/subtract.js';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus.js';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus.js';\nimport { xgcdDocs } from './function/arithmetic/xgcd.js';\nimport { bitAndDocs } from './function/bitwise/bitAnd.js';\nimport { bitNotDocs } from './function/bitwise/bitNot.js';\nimport { bitOrDocs } from './function/bitwise/bitOr.js';\nimport { bitXorDocs } from './function/bitwise/bitXor.js';\nimport { leftShiftDocs } from './function/bitwise/leftShift.js';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift.js';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift.js';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers.js';\nimport { catalanDocs } from './function/combinatorics/catalan.js';\nimport { compositionDocs } from './function/combinatorics/composition.js';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2.js';\nimport { argDocs } from './function/complex/arg.js';\nimport { conjDocs } from './function/complex/conj.js';\nimport { imDocs } from './function/complex/im.js';\nimport { reDocs } from './function/complex/re.js';\nimport { evaluateDocs } from './function/expression/evaluate.js';\nimport { helpDocs } from './function/expression/help.js';\nimport { distanceDocs } from './function/geometry/distance.js';\nimport { intersectDocs } from './function/geometry/intersect.js';\nimport { andDocs } from './function/logical/and.js';\nimport { notDocs } from './function/logical/not.js';\nimport { orDocs } from './function/logical/or.js';\nimport { xorDocs } from './function/logical/xor.js';\nimport { columnDocs } from './function/matrix/column.js';\nimport { concatDocs } from './function/matrix/concat.js';\nimport { countDocs } from './function/matrix/count.js';\nimport { crossDocs } from './function/matrix/cross.js';\nimport { ctransposeDocs } from './function/matrix/ctranspose.js';\nimport { detDocs } from './function/matrix/det.js';\nimport { diagDocs } from './function/matrix/diag.js';\nimport { diffDocs } from './function/matrix/diff.js';\nimport { dotDocs } from './function/matrix/dot.js';\nimport { eigsDocs } from './function/matrix/eigs.js';\nimport { filterDocs } from './function/matrix/filter.js';\nimport { flattenDocs } from './function/matrix/flatten.js';\nimport { forEachDocs } from './function/matrix/forEach.js';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType.js';\nimport { identityDocs } from './function/matrix/identity.js';\nimport { invDocs } from './function/matrix/inv.js';\nimport { pinvDocs } from './function/matrix/pinv.js';\nimport { kronDocs } from './function/matrix/kron.js';\nimport { mapDocs } from './function/matrix/map.js';\nimport { matrixFromColumnsDocs } from './function/matrix/matrixFromColumns.js';\nimport { matrixFromFunctionDocs } from './function/matrix/matrixFromFunction.js';\nimport { matrixFromRowsDocs } from './function/matrix/matrixFromRows.js';\nimport { onesDocs } from './function/matrix/ones.js';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect.js';\nimport { rangeDocs } from './function/matrix/range.js';\nimport { reshapeDocs } from './function/matrix/reshape.js';\nimport { resizeDocs } from './function/matrix/resize.js';\nimport { rotateDocs } from './function/matrix/rotate.js';\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix.js';\nimport { rowDocs } from './function/matrix/row.js';\nimport { sizeDocs } from './function/matrix/size.js';\nimport { sortDocs } from './function/matrix/sort.js';\nimport { squeezeDocs } from './function/matrix/squeeze.js';\nimport { subsetDocs } from './function/matrix/subset.js';\nimport { traceDocs } from './function/matrix/trace.js';\nimport { transposeDocs } from './function/matrix/transpose.js';\nimport { zerosDocs } from './function/matrix/zeros.js';\nimport { fftDocs } from './function/matrix/fft.js';\nimport { ifftDocs } from './function/matrix/ifft.js';\nimport { combinationsDocs } from './function/probability/combinations.js';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep.js';\nimport { factorialDocs } from './function/probability/factorial.js';\nimport { gammaDocs } from './function/probability/gamma.js';\nimport { lgammaDocs } from './function/probability/lgamma.js';\nimport { kldivergenceDocs } from './function/probability/kldivergence.js';\nimport { multinomialDocs } from './function/probability/multinomial.js';\nimport { permutationsDocs } from './function/probability/permutations.js';\nimport { pickRandomDocs } from './function/probability/pickRandom.js';\nimport { randomDocs } from './function/probability/random.js';\nimport { randomIntDocs } from './function/probability/randomInt.js';\nimport { compareDocs } from './function/relational/compare.js';\nimport { compareNaturalDocs } from './function/relational/compareNatural.js';\nimport { compareTextDocs } from './function/relational/compareText.js';\nimport { deepEqualDocs } from './function/relational/deepEqual.js';\nimport { equalDocs } from './function/relational/equal.js';\nimport { equalTextDocs } from './function/relational/equalText.js';\nimport { largerDocs } from './function/relational/larger.js';\nimport { largerEqDocs } from './function/relational/largerEq.js';\nimport { smallerDocs } from './function/relational/smaller.js';\nimport { smallerEqDocs } from './function/relational/smallerEq.js';\nimport { unequalDocs } from './function/relational/unequal.js';\nimport { setCartesianDocs } from './function/set/setCartesian.js';\nimport { setDifferenceDocs } from './function/set/setDifference.js';\nimport { setDistinctDocs } from './function/set/setDistinct.js';\nimport { setIntersectDocs } from './function/set/setIntersect.js';\nimport { setIsSubsetDocs } from './function/set/setIsSubset.js';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity.js';\nimport { setPowersetDocs } from './function/set/setPowerset.js';\nimport { setSizeDocs } from './function/set/setSize.js';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference.js';\nimport { setUnionDocs } from './function/set/setUnion.js';\nimport { erfDocs } from './function/special/erf.js';\nimport { madDocs } from './function/statistics/mad.js';\nimport { maxDocs } from './function/statistics/max.js';\nimport { meanDocs } from './function/statistics/mean.js';\nimport { medianDocs } from './function/statistics/median.js';\nimport { minDocs } from './function/statistics/min.js';\nimport { modeDocs } from './function/statistics/mode.js';\nimport { prodDocs } from './function/statistics/prod.js';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq.js';\nimport { stdDocs } from './function/statistics/std.js';\nimport { cumSumDocs } from './function/statistics/cumsum.js';\nimport { sumDocs } from './function/statistics/sum.js';\nimport { varianceDocs } from './function/statistics/variance.js';\nimport { acosDocs } from './function/trigonometry/acos.js';\nimport { acoshDocs } from './function/trigonometry/acosh.js';\nimport { acotDocs } from './function/trigonometry/acot.js';\nimport { acothDocs } from './function/trigonometry/acoth.js';\nimport { acscDocs } from './function/trigonometry/acsc.js';\nimport { acschDocs } from './function/trigonometry/acsch.js';\nimport { asecDocs } from './function/trigonometry/asec.js';\nimport { asechDocs } from './function/trigonometry/asech.js';\nimport { asinDocs } from './function/trigonometry/asin.js';\nimport { asinhDocs } from './function/trigonometry/asinh.js';\nimport { atanDocs } from './function/trigonometry/atan.js';\nimport { atan2Docs } from './function/trigonometry/atan2.js';\nimport { atanhDocs } from './function/trigonometry/atanh.js';\nimport { cosDocs } from './function/trigonometry/cos.js';\nimport { coshDocs } from './function/trigonometry/cosh.js';\nimport { cotDocs } from './function/trigonometry/cot.js';\nimport { cothDocs } from './function/trigonometry/coth.js';\nimport { cscDocs } from './function/trigonometry/csc.js';\nimport { cschDocs } from './function/trigonometry/csch.js';\nimport { secDocs } from './function/trigonometry/sec.js';\nimport { sechDocs } from './function/trigonometry/sech.js';\nimport { sinDocs } from './function/trigonometry/sin.js';\nimport { sinhDocs } from './function/trigonometry/sinh.js';\nimport { tanDocs } from './function/trigonometry/tan.js';\nimport { tanhDocs } from './function/trigonometry/tanh.js';\nimport { toDocs } from './function/units/to.js';\nimport { binDocs } from './function/utils/bin.js';\nimport { cloneDocs } from './function/utils/clone.js';\nimport { formatDocs } from './function/utils/format.js';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue.js';\nimport { hexDocs } from './function/utils/hex.js';\nimport { isIntegerDocs } from './function/utils/isInteger.js';\nimport { isNaNDocs } from './function/utils/isNaN.js';\nimport { isNegativeDocs } from './function/utils/isNegative.js';\nimport { isNumericDocs } from './function/utils/isNumeric.js';\nimport { isPositiveDocs } from './function/utils/isPositive.js';\nimport { isPrimeDocs } from './function/utils/isPrime.js';\nimport { isZeroDocs } from './function/utils/isZero.js';\nimport { numericDocs } from './function/utils/numeric.js';\nimport { octDocs } from './function/utils/oct.js';\nimport { printDocs } from './function/utils/print.js';\nimport { typeOfDocs } from './function/utils/typeOf.js';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  boolean: booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  false: falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  null: nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  true: trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lsolveAll: lsolveAllDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  leafCount: leafCountDocs,\n  polynomialRoot: polynomialRootDocs,\n  resolve: resolveDocs,\n  simplify: simplifyDocs,\n  simplifyConstant: simplifyConstantDocs,\n  simplifyCore: simplifyCoreDocs,\n  symbolicEqual: symbolicEqualDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  usolveAll: usolveAllDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  invmod: invmodDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  import: importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  count: countDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  diff: diffDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  pinv: pinvDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  matrixFromFunction: matrixFromFunctionDocs,\n  matrixFromRows: matrixFromRowsDocs,\n  matrixFromColumns: matrixFromColumnsDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  rotate: rotateDocs,\n  rotationMatrix: rotationMatrixDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  fft: fftDocs,\n  ifft: ifftDocs,\n  sylvester: sylvesterDocs,\n  schur: schurDocs,\n  lyap: lyapDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  lgamma: lgammaDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  cumsum: cumSumDocs,\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  bin: binDocs,\n  oct: octDocs,\n  hex: hexDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  print: printDocs,\n  typeOf: typeOfDocs,\n  numeric: numericDocs\n};","map":{"version":3,"names":["eDocs","falseDocs","iDocs","InfinityDocs","LN10Docs","LN2Docs","LOG10EDocs","LOG2EDocs","NaNDocs","nullDocs","phiDocs","piDocs","SQRT12Docs","SQRT2Docs","tauDocs","trueDocs","versionDocs","bignumberDocs","booleanDocs","complexDocs","createUnitDocs","fractionDocs","indexDocs","matrixDocs","numberDocs","sparseDocs","splitUnitDocs","stringDocs","unitDocs","configDocs","importDocs","typedDocs","derivativeDocs","leafCountDocs","lsolveDocs","lsolveAllDocs","lupDocs","lusolveDocs","polynomialRootDocs","qrDocs","rationalizeDocs","resolveDocs","simplifyDocs","simplifyConstantDocs","simplifyCoreDocs","sluDocs","symbolicEqualDocs","usolveDocs","usolveAllDocs","absDocs","addDocs","cbrtDocs","ceilDocs","cubeDocs","divideDocs","dotDivideDocs","dotMultiplyDocs","dotPowDocs","expDocs","expmDocs","expm1Docs","fixDocs","floorDocs","gcdDocs","hypotDocs","invmodDocs","lcmDocs","logDocs","log10Docs","log1pDocs","log2Docs","modDocs","multiplyDocs","normDocs","nthRootDocs","nthRootsDocs","powDocs","roundDocs","signDocs","sqrtDocs","sqrtmDocs","sylvesterDocs","schurDocs","lyapDocs","squareDocs","subtractDocs","unaryMinusDocs","unaryPlusDocs","xgcdDocs","bitAndDocs","bitNotDocs","bitOrDocs","bitXorDocs","leftShiftDocs","rightArithShiftDocs","rightLogShiftDocs","bellNumbersDocs","catalanDocs","compositionDocs","stirlingS2Docs","argDocs","conjDocs","imDocs","reDocs","evaluateDocs","helpDocs","distanceDocs","intersectDocs","andDocs","notDocs","orDocs","xorDocs","columnDocs","concatDocs","countDocs","crossDocs","ctransposeDocs","detDocs","diagDocs","diffDocs","dotDocs","eigsDocs","filterDocs","flattenDocs","forEachDocs","getMatrixDataTypeDocs","identityDocs","invDocs","pinvDocs","kronDocs","mapDocs","matrixFromColumnsDocs","matrixFromFunctionDocs","matrixFromRowsDocs","onesDocs","partitionSelectDocs","rangeDocs","reshapeDocs","resizeDocs","rotateDocs","rotationMatrixDocs","rowDocs","sizeDocs","sortDocs","squeezeDocs","subsetDocs","traceDocs","transposeDocs","zerosDocs","fftDocs","ifftDocs","combinationsDocs","combinationsWithRepDocs","factorialDocs","gammaDocs","lgammaDocs","kldivergenceDocs","multinomialDocs","permutationsDocs","pickRandomDocs","randomDocs","randomIntDocs","compareDocs","compareNaturalDocs","compareTextDocs","deepEqualDocs","equalDocs","equalTextDocs","largerDocs","largerEqDocs","smallerDocs","smallerEqDocs","unequalDocs","setCartesianDocs","setDifferenceDocs","setDistinctDocs","setIntersectDocs","setIsSubsetDocs","setMultiplicityDocs","setPowersetDocs","setSizeDocs","setSymDifferenceDocs","setUnionDocs","erfDocs","madDocs","maxDocs","meanDocs","medianDocs","minDocs","modeDocs","prodDocs","quantileSeqDocs","stdDocs","cumSumDocs","sumDocs","varianceDocs","acosDocs","acoshDocs","acotDocs","acothDocs","acscDocs","acschDocs","asecDocs","asechDocs","asinDocs","asinhDocs","atanDocs","atan2Docs","atanhDocs","cosDocs","coshDocs","cotDocs","cothDocs","cscDocs","cschDocs","secDocs","sechDocs","sinDocs","sinhDocs","tanDocs","tanhDocs","toDocs","binDocs","cloneDocs","formatDocs","hasNumericValueDocs","hexDocs","isIntegerDocs","isNaNDocs","isNegativeDocs","isNumericDocs","isPositiveDocs","isPrimeDocs","isZeroDocs","numericDocs","octDocs","printDocs","typeOfDocs","embeddedDocs","bignumber","boolean","complex","createUnit","fraction","index","matrix","number","sparse","splitUnit","string","unit","e","E","false","i","Infinity","LN2","LN10","LOG2E","LOG10E","NaN","null","pi","PI","phi","SQRT1_2","SQRT2","tau","true","version","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","lsolve","lsolveAll","lup","lusolve","leafCount","polynomialRoot","resolve","simplify","simplifyConstant","simplifyCore","symbolicEqual","rationalize","slu","usolve","usolveAll","qr","abs","add","cbrt","ceil","cube","divide","dotDivide","dotMultiply","dotPow","exp","expm","expm1","fix","floor","gcd","hypot","lcm","log","log2","log1p","log10","mod","multiply","norm","nthRoot","nthRoots","pow","round","sign","sqrt","sqrtm","square","subtract","unaryMinus","unaryPlus","xgcd","invmod","bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift","bellNumbers","catalan","composition","stirlingS2","config","import","typed","arg","conj","re","im","evaluate","help","distance","intersect","and","not","or","xor","concat","count","cross","column","ctranspose","det","diag","diff","dot","getMatrixDataType","identity","filter","flatten","forEach","inv","pinv","eigs","kron","matrixFromFunction","matrixFromRows","matrixFromColumns","map","ones","partitionSelect","range","resize","reshape","rotate","rotationMatrix","row","size","sort","squeeze","subset","trace","transpose","zeros","fft","ifft","sylvester","schur","lyap","combinations","combinationsWithRep","factorial","gamma","kldivergence","lgamma","multinomial","permutations","pickRandom","random","randomInt","compare","compareNatural","compareText","deepEqual","equal","equalText","larger","largerEq","smaller","smallerEq","unequal","setCartesian","setDifference","setDistinct","setIntersect","setIsSubset","setMultiplicity","setPowerset","setSize","setSymDifference","setUnion","erf","cumsum","mad","max","mean","median","min","mode","prod","quantileSeq","std","sum","variance","acos","acosh","acot","acoth","acsc","acsch","asec","asech","asin","asinh","atan","atanh","atan2","cos","cosh","cot","coth","csc","csch","sec","sech","sin","sinh","tan","tanh","to","clone","format","bin","oct","hex","isNaN","isInteger","isNegative","isNumeric","hasNumericValue","isPositive","isPrime","isZero","print","typeOf","numeric"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/expression/embeddedDocs/embeddedDocs.js"],"sourcesContent":["import { eDocs } from './constants/e.js';\nimport { falseDocs } from './constants/false.js';\nimport { iDocs } from './constants/i.js';\nimport { InfinityDocs } from './constants/Infinity.js';\nimport { LN10Docs } from './constants/LN10.js';\nimport { LN2Docs } from './constants/LN2.js';\nimport { LOG10EDocs } from './constants/LOG10E.js';\nimport { LOG2EDocs } from './constants/LOG2E.js';\nimport { NaNDocs } from './constants/NaN.js';\nimport { nullDocs } from './constants/null.js';\nimport { phiDocs } from './constants/phi.js';\nimport { piDocs } from './constants/pi.js';\nimport { SQRT12Docs } from './constants/SQRT1_2.js';\nimport { SQRT2Docs } from './constants/SQRT2.js';\nimport { tauDocs } from './constants/tau.js';\nimport { trueDocs } from './constants/true.js';\nimport { versionDocs } from './constants/version.js';\nimport { bignumberDocs } from './construction/bignumber.js';\nimport { booleanDocs } from './construction/boolean.js';\nimport { complexDocs } from './construction/complex.js';\nimport { createUnitDocs } from './construction/createUnit.js';\nimport { fractionDocs } from './construction/fraction.js';\nimport { indexDocs } from './construction/index.js';\nimport { matrixDocs } from './construction/matrix.js';\nimport { numberDocs } from './construction/number.js';\nimport { sparseDocs } from './construction/sparse.js';\nimport { splitUnitDocs } from './construction/splitUnit.js';\nimport { stringDocs } from './construction/string.js';\nimport { unitDocs } from './construction/unit.js';\nimport { configDocs } from './core/config.js';\nimport { importDocs } from './core/import.js';\nimport { typedDocs } from './core/typed.js';\nimport { derivativeDocs } from './function/algebra/derivative.js';\nimport { leafCountDocs } from './function/algebra/leafCount.js';\nimport { lsolveDocs } from './function/algebra/lsolve.js';\nimport { lsolveAllDocs } from './function/algebra/lsolveAll.js';\nimport { lupDocs } from './function/algebra/lup.js';\nimport { lusolveDocs } from './function/algebra/lusolve.js';\nimport { polynomialRootDocs } from './function/algebra/polynomialRoot.js';\nimport { qrDocs } from './function/algebra/qr.js';\nimport { rationalizeDocs } from './function/algebra/rationalize.js';\nimport { resolveDocs } from './function/algebra/resolve.js';\nimport { simplifyDocs } from './function/algebra/simplify.js';\nimport { simplifyConstantDocs } from './function/algebra/simplifyConstant.js';\nimport { simplifyCoreDocs } from './function/algebra/simplifyCore.js';\nimport { sluDocs } from './function/algebra/slu.js';\nimport { symbolicEqualDocs } from './function/algebra/symbolicEqual.js';\nimport { usolveDocs } from './function/algebra/usolve.js';\nimport { usolveAllDocs } from './function/algebra/usolveAll.js';\nimport { absDocs } from './function/arithmetic/abs.js';\nimport { addDocs } from './function/arithmetic/add.js';\nimport { cbrtDocs } from './function/arithmetic/cbrt.js';\nimport { ceilDocs } from './function/arithmetic/ceil.js';\nimport { cubeDocs } from './function/arithmetic/cube.js';\nimport { divideDocs } from './function/arithmetic/divide.js';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide.js';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply.js';\nimport { dotPowDocs } from './function/arithmetic/dotPow.js';\nimport { expDocs } from './function/arithmetic/exp.js';\nimport { expmDocs } from './function/arithmetic/expm.js';\nimport { expm1Docs } from './function/arithmetic/expm1.js';\nimport { fixDocs } from './function/arithmetic/fix.js';\nimport { floorDocs } from './function/arithmetic/floor.js';\nimport { gcdDocs } from './function/arithmetic/gcd.js';\nimport { hypotDocs } from './function/arithmetic/hypot.js';\nimport { invmodDocs } from './function/arithmetic/invmod.js';\nimport { lcmDocs } from './function/arithmetic/lcm.js';\nimport { logDocs } from './function/arithmetic/log.js';\nimport { log10Docs } from './function/arithmetic/log10.js';\nimport { log1pDocs } from './function/arithmetic/log1p.js';\nimport { log2Docs } from './function/arithmetic/log2.js';\nimport { modDocs } from './function/arithmetic/mod.js';\nimport { multiplyDocs } from './function/arithmetic/multiply.js';\nimport { normDocs } from './function/arithmetic/norm.js';\nimport { nthRootDocs } from './function/arithmetic/nthRoot.js';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots.js';\nimport { powDocs } from './function/arithmetic/pow.js';\nimport { roundDocs } from './function/arithmetic/round.js';\nimport { signDocs } from './function/arithmetic/sign.js';\nimport { sqrtDocs } from './function/arithmetic/sqrt.js';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm.js';\nimport { sylvesterDocs } from './function/matrix/sylvester.js';\nimport { schurDocs } from './function/matrix/schur.js';\nimport { lyapDocs } from './function/matrix/lyap.js';\nimport { squareDocs } from './function/arithmetic/square.js';\nimport { subtractDocs } from './function/arithmetic/subtract.js';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus.js';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus.js';\nimport { xgcdDocs } from './function/arithmetic/xgcd.js';\nimport { bitAndDocs } from './function/bitwise/bitAnd.js';\nimport { bitNotDocs } from './function/bitwise/bitNot.js';\nimport { bitOrDocs } from './function/bitwise/bitOr.js';\nimport { bitXorDocs } from './function/bitwise/bitXor.js';\nimport { leftShiftDocs } from './function/bitwise/leftShift.js';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift.js';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift.js';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers.js';\nimport { catalanDocs } from './function/combinatorics/catalan.js';\nimport { compositionDocs } from './function/combinatorics/composition.js';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2.js';\nimport { argDocs } from './function/complex/arg.js';\nimport { conjDocs } from './function/complex/conj.js';\nimport { imDocs } from './function/complex/im.js';\nimport { reDocs } from './function/complex/re.js';\nimport { evaluateDocs } from './function/expression/evaluate.js';\nimport { helpDocs } from './function/expression/help.js';\nimport { distanceDocs } from './function/geometry/distance.js';\nimport { intersectDocs } from './function/geometry/intersect.js';\nimport { andDocs } from './function/logical/and.js';\nimport { notDocs } from './function/logical/not.js';\nimport { orDocs } from './function/logical/or.js';\nimport { xorDocs } from './function/logical/xor.js';\nimport { columnDocs } from './function/matrix/column.js';\nimport { concatDocs } from './function/matrix/concat.js';\nimport { countDocs } from './function/matrix/count.js';\nimport { crossDocs } from './function/matrix/cross.js';\nimport { ctransposeDocs } from './function/matrix/ctranspose.js';\nimport { detDocs } from './function/matrix/det.js';\nimport { diagDocs } from './function/matrix/diag.js';\nimport { diffDocs } from './function/matrix/diff.js';\nimport { dotDocs } from './function/matrix/dot.js';\nimport { eigsDocs } from './function/matrix/eigs.js';\nimport { filterDocs } from './function/matrix/filter.js';\nimport { flattenDocs } from './function/matrix/flatten.js';\nimport { forEachDocs } from './function/matrix/forEach.js';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType.js';\nimport { identityDocs } from './function/matrix/identity.js';\nimport { invDocs } from './function/matrix/inv.js';\nimport { pinvDocs } from './function/matrix/pinv.js';\nimport { kronDocs } from './function/matrix/kron.js';\nimport { mapDocs } from './function/matrix/map.js';\nimport { matrixFromColumnsDocs } from './function/matrix/matrixFromColumns.js';\nimport { matrixFromFunctionDocs } from './function/matrix/matrixFromFunction.js';\nimport { matrixFromRowsDocs } from './function/matrix/matrixFromRows.js';\nimport { onesDocs } from './function/matrix/ones.js';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect.js';\nimport { rangeDocs } from './function/matrix/range.js';\nimport { reshapeDocs } from './function/matrix/reshape.js';\nimport { resizeDocs } from './function/matrix/resize.js';\nimport { rotateDocs } from './function/matrix/rotate.js';\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix.js';\nimport { rowDocs } from './function/matrix/row.js';\nimport { sizeDocs } from './function/matrix/size.js';\nimport { sortDocs } from './function/matrix/sort.js';\nimport { squeezeDocs } from './function/matrix/squeeze.js';\nimport { subsetDocs } from './function/matrix/subset.js';\nimport { traceDocs } from './function/matrix/trace.js';\nimport { transposeDocs } from './function/matrix/transpose.js';\nimport { zerosDocs } from './function/matrix/zeros.js';\nimport { fftDocs } from './function/matrix/fft.js';\nimport { ifftDocs } from './function/matrix/ifft.js';\nimport { combinationsDocs } from './function/probability/combinations.js';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep.js';\nimport { factorialDocs } from './function/probability/factorial.js';\nimport { gammaDocs } from './function/probability/gamma.js';\nimport { lgammaDocs } from './function/probability/lgamma.js';\nimport { kldivergenceDocs } from './function/probability/kldivergence.js';\nimport { multinomialDocs } from './function/probability/multinomial.js';\nimport { permutationsDocs } from './function/probability/permutations.js';\nimport { pickRandomDocs } from './function/probability/pickRandom.js';\nimport { randomDocs } from './function/probability/random.js';\nimport { randomIntDocs } from './function/probability/randomInt.js';\nimport { compareDocs } from './function/relational/compare.js';\nimport { compareNaturalDocs } from './function/relational/compareNatural.js';\nimport { compareTextDocs } from './function/relational/compareText.js';\nimport { deepEqualDocs } from './function/relational/deepEqual.js';\nimport { equalDocs } from './function/relational/equal.js';\nimport { equalTextDocs } from './function/relational/equalText.js';\nimport { largerDocs } from './function/relational/larger.js';\nimport { largerEqDocs } from './function/relational/largerEq.js';\nimport { smallerDocs } from './function/relational/smaller.js';\nimport { smallerEqDocs } from './function/relational/smallerEq.js';\nimport { unequalDocs } from './function/relational/unequal.js';\nimport { setCartesianDocs } from './function/set/setCartesian.js';\nimport { setDifferenceDocs } from './function/set/setDifference.js';\nimport { setDistinctDocs } from './function/set/setDistinct.js';\nimport { setIntersectDocs } from './function/set/setIntersect.js';\nimport { setIsSubsetDocs } from './function/set/setIsSubset.js';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity.js';\nimport { setPowersetDocs } from './function/set/setPowerset.js';\nimport { setSizeDocs } from './function/set/setSize.js';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference.js';\nimport { setUnionDocs } from './function/set/setUnion.js';\nimport { erfDocs } from './function/special/erf.js';\nimport { madDocs } from './function/statistics/mad.js';\nimport { maxDocs } from './function/statistics/max.js';\nimport { meanDocs } from './function/statistics/mean.js';\nimport { medianDocs } from './function/statistics/median.js';\nimport { minDocs } from './function/statistics/min.js';\nimport { modeDocs } from './function/statistics/mode.js';\nimport { prodDocs } from './function/statistics/prod.js';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq.js';\nimport { stdDocs } from './function/statistics/std.js';\nimport { cumSumDocs } from './function/statistics/cumsum.js';\nimport { sumDocs } from './function/statistics/sum.js';\nimport { varianceDocs } from './function/statistics/variance.js';\nimport { acosDocs } from './function/trigonometry/acos.js';\nimport { acoshDocs } from './function/trigonometry/acosh.js';\nimport { acotDocs } from './function/trigonometry/acot.js';\nimport { acothDocs } from './function/trigonometry/acoth.js';\nimport { acscDocs } from './function/trigonometry/acsc.js';\nimport { acschDocs } from './function/trigonometry/acsch.js';\nimport { asecDocs } from './function/trigonometry/asec.js';\nimport { asechDocs } from './function/trigonometry/asech.js';\nimport { asinDocs } from './function/trigonometry/asin.js';\nimport { asinhDocs } from './function/trigonometry/asinh.js';\nimport { atanDocs } from './function/trigonometry/atan.js';\nimport { atan2Docs } from './function/trigonometry/atan2.js';\nimport { atanhDocs } from './function/trigonometry/atanh.js';\nimport { cosDocs } from './function/trigonometry/cos.js';\nimport { coshDocs } from './function/trigonometry/cosh.js';\nimport { cotDocs } from './function/trigonometry/cot.js';\nimport { cothDocs } from './function/trigonometry/coth.js';\nimport { cscDocs } from './function/trigonometry/csc.js';\nimport { cschDocs } from './function/trigonometry/csch.js';\nimport { secDocs } from './function/trigonometry/sec.js';\nimport { sechDocs } from './function/trigonometry/sech.js';\nimport { sinDocs } from './function/trigonometry/sin.js';\nimport { sinhDocs } from './function/trigonometry/sinh.js';\nimport { tanDocs } from './function/trigonometry/tan.js';\nimport { tanhDocs } from './function/trigonometry/tanh.js';\nimport { toDocs } from './function/units/to.js';\nimport { binDocs } from './function/utils/bin.js';\nimport { cloneDocs } from './function/utils/clone.js';\nimport { formatDocs } from './function/utils/format.js';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue.js';\nimport { hexDocs } from './function/utils/hex.js';\nimport { isIntegerDocs } from './function/utils/isInteger.js';\nimport { isNaNDocs } from './function/utils/isNaN.js';\nimport { isNegativeDocs } from './function/utils/isNegative.js';\nimport { isNumericDocs } from './function/utils/isNumeric.js';\nimport { isPositiveDocs } from './function/utils/isPositive.js';\nimport { isPrimeDocs } from './function/utils/isPrime.js';\nimport { isZeroDocs } from './function/utils/isZero.js';\nimport { numericDocs } from './function/utils/numeric.js';\nimport { octDocs } from './function/utils/oct.js';\nimport { printDocs } from './function/utils/print.js';\nimport { typeOfDocs } from './function/utils/typeOf.js';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  boolean: booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  false: falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  null: nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  true: trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lsolveAll: lsolveAllDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  leafCount: leafCountDocs,\n  polynomialRoot: polynomialRootDocs,\n  resolve: resolveDocs,\n  simplify: simplifyDocs,\n  simplifyConstant: simplifyConstantDocs,\n  simplifyCore: simplifyCoreDocs,\n  symbolicEqual: symbolicEqualDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  usolveAll: usolveAllDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  invmod: invmodDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  import: importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  count: countDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  diff: diffDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  pinv: pinvDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  matrixFromFunction: matrixFromFunctionDocs,\n  matrixFromRows: matrixFromRowsDocs,\n  matrixFromColumns: matrixFromColumnsDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  rotate: rotateDocs,\n  rotationMatrix: rotationMatrixDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  fft: fftDocs,\n  ifft: ifftDocs,\n  sylvester: sylvesterDocs,\n  schur: schurDocs,\n  lyap: lyapDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  lgamma: lgammaDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  cumsum: cumSumDocs,\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  bin: binDocs,\n  oct: octDocs,\n  hex: hexDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  print: printDocs,\n  typeOf: typeOfDocs,\n  numeric: numericDocs\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}