{"ast":null,"code":"import { clone } from '../../../utils/object.js';\nexport function createRealSymmetric(_ref) {\n  var {\n    config,\n    addScalar,\n    subtract,\n    abs,\n    atan,\n    cos,\n    sin,\n    multiplyScalar,\n    inv,\n    bignumber,\n    multiply,\n    add\n  } = _ref;\n  /**\n   * @param {number[] | BigNumber[]} arr\n   * @param {number} N\n   * @param {number} prec\n   * @param {'number' | 'BigNumber'} type\n   */\n  function main(arr, N) {\n    var prec = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : config.epsilon;\n    var type = arguments.length > 3 ? arguments[3] : undefined;\n    if (type === 'number') {\n      return diag(arr, prec);\n    }\n    if (type === 'BigNumber') {\n      return diagBig(arr, prec);\n    }\n    throw TypeError('Unsupported data type: ' + type);\n  }\n\n  // diagonalization implementation for number (efficient)\n  function diag(x, precision) {\n    var N = x.length;\n    var e0 = Math.abs(precision / N);\n    var psi;\n    var Sij = new Array(N);\n    // Sij is Identity Matrix\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    }\n    // initial error\n    var Vab = getAij(x);\n    while (Math.abs(Vab[1]) >= Math.abs(e0)) {\n      var _i = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);\n      x = x1(x, psi, _i, j);\n      Sij = Sij1(Sij, psi, _i, j);\n      Vab = getAij(x);\n    }\n    var Ei = createArray(N, 0); // eigenvalues\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      Ei[_i2] = x[_i2][_i2];\n    }\n    return sorting(clone(Ei), clone(Sij));\n  }\n\n  // diagonalization implementation for bigNumber\n  function diagBig(x, precision) {\n    var N = x.length;\n    var e0 = abs(precision / N);\n    var psi;\n    var Sij = new Array(N);\n    // Sij is Identity Matrix\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    }\n    // initial error\n    var Vab = getAijBig(x);\n    while (abs(Vab[1]) >= abs(e0)) {\n      var _i3 = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);\n      x = x1Big(x, psi, _i3, j);\n      Sij = Sij1Big(Sij, psi, _i3, j);\n      Vab = getAijBig(x);\n    }\n    var Ei = createArray(N, 0); // eigenvalues\n    for (var _i4 = 0; _i4 < N; _i4++) {\n      Ei[_i4] = x[_i4][_i4];\n    }\n    // return [clone(Ei), clone(Sij)]\n    return sorting(clone(Ei), clone(Sij));\n  }\n\n  // get angle\n  function getTheta(aii, ajj, aij) {\n    var denom = ajj - aii;\n    if (Math.abs(denom) <= config.epsilon) {\n      return Math.PI / 4.0;\n    } else {\n      return 0.5 * Math.atan(2.0 * aij / (ajj - aii));\n    }\n  }\n\n  // get angle\n  function getThetaBig(aii, ajj, aij) {\n    var denom = subtract(ajj, aii);\n    if (abs(denom) <= config.epsilon) {\n      return bignumber(-1).acos().div(4);\n    } else {\n      return multiplyScalar(0.5, atan(multiply(2.0, aij, inv(denom))));\n    }\n  }\n\n  // update eigvec\n  function Sij1(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var Ski = createArray(N, 0);\n    var Skj = createArray(N, 0);\n    for (var k = 0; k < N; k++) {\n      Ski[k] = c * Sij[k][i] - s * Sij[k][j];\n      Skj[k] = s * Sij[k][i] + c * Sij[k][j];\n    }\n    for (var _k = 0; _k < N; _k++) {\n      Sij[_k][i] = Ski[_k];\n      Sij[_k][j] = Skj[_k];\n    }\n    return Sij;\n  }\n  // update eigvec for overlap\n  function Sij1Big(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = cos(theta);\n    var s = sin(theta);\n    var Ski = createArray(N, bignumber(0));\n    var Skj = createArray(N, bignumber(0));\n    for (var k = 0; k < N; k++) {\n      Ski[k] = subtract(multiplyScalar(c, Sij[k][i]), multiplyScalar(s, Sij[k][j]));\n      Skj[k] = addScalar(multiplyScalar(s, Sij[k][i]), multiplyScalar(c, Sij[k][j]));\n    }\n    for (var _k2 = 0; _k2 < N; _k2++) {\n      Sij[_k2][i] = Ski[_k2];\n      Sij[_k2][j] = Skj[_k2];\n    }\n    return Sij;\n  }\n\n  // update matrix\n  function x1Big(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = bignumber(cos(theta));\n    var s = bignumber(sin(theta));\n    var c2 = multiplyScalar(c, c);\n    var s2 = multiplyScalar(s, s);\n    var Aki = createArray(N, bignumber(0));\n    var Akj = createArray(N, bignumber(0));\n    // 2cs Hij\n    var csHij = multiply(bignumber(2), c, s, Hij[i][j]);\n    //  Aii\n    var Aii = addScalar(subtract(multiplyScalar(c2, Hij[i][i]), csHij), multiplyScalar(s2, Hij[j][j]));\n    var Ajj = add(multiplyScalar(s2, Hij[i][i]), csHij, multiplyScalar(c2, Hij[j][j]));\n    // 0  to i\n    for (var k = 0; k < N; k++) {\n      Aki[k] = subtract(multiplyScalar(c, Hij[i][k]), multiplyScalar(s, Hij[j][k]));\n      Akj[k] = addScalar(multiplyScalar(s, Hij[i][k]), multiplyScalar(c, Hij[j][k]));\n    }\n    // Modify Hij\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = bignumber(0);\n    Hij[j][i] = bignumber(0);\n    // 0  to i\n    for (var _k3 = 0; _k3 < N; _k3++) {\n      if (_k3 !== i && _k3 !== j) {\n        Hij[i][_k3] = Aki[_k3];\n        Hij[_k3][i] = Aki[_k3];\n        Hij[j][_k3] = Akj[_k3];\n        Hij[_k3][j] = Akj[_k3];\n      }\n    }\n    return Hij;\n  }\n\n  // update matrix\n  function x1(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var c2 = c * c;\n    var s2 = s * s;\n    var Aki = createArray(N, 0);\n    var Akj = createArray(N, 0);\n    //  Aii\n    var Aii = c2 * Hij[i][i] - 2 * c * s * Hij[i][j] + s2 * Hij[j][j];\n    var Ajj = s2 * Hij[i][i] + 2 * c * s * Hij[i][j] + c2 * Hij[j][j];\n    // 0  to i\n    for (var k = 0; k < N; k++) {\n      Aki[k] = c * Hij[i][k] - s * Hij[j][k];\n      Akj[k] = s * Hij[i][k] + c * Hij[j][k];\n    }\n    // Modify Hij\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = 0;\n    Hij[j][i] = 0;\n    // 0  to i\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      if (_k4 !== i && _k4 !== j) {\n        Hij[i][_k4] = Aki[_k4];\n        Hij[_k4][i] = Aki[_k4];\n        Hij[j][_k4] = Akj[_k4];\n        Hij[_k4][j] = Akj[_k4];\n      }\n    }\n    return Hij;\n  }\n\n  // get max off-diagonal value from Upper Diagonal\n  function getAij(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (Math.abs(maxMij) < Math.abs(Mij[i][j])) {\n          maxMij = Math.abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n    return [maxIJ, maxMij];\n  }\n\n  // get max off-diagonal value from Upper Diagonal\n  function getAijBig(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (abs(maxMij) < abs(Mij[i][j])) {\n          maxMij = abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n    return [maxIJ, maxMij];\n  }\n\n  // sort results\n  function sorting(E, S) {\n    var N = E.length;\n    var values = Array(N);\n    var vectors = Array(N);\n    for (var k = 0; k < N; k++) {\n      vectors[k] = Array(N);\n    }\n    for (var i = 0; i < N; i++) {\n      var minID = 0;\n      var minE = E[0];\n      for (var j = 0; j < E.length; j++) {\n        if (abs(E[j]) < abs(minE)) {\n          minID = j;\n          minE = E[minID];\n        }\n      }\n      values[i] = E.splice(minID, 1)[0];\n      for (var _k5 = 0; _k5 < N; _k5++) {\n        vectors[_k5][i] = S[_k5][minID];\n        S[_k5].splice(minID, 1);\n      }\n    }\n    return {\n      values,\n      vectors\n    };\n  }\n\n  /**\n   * Create an array of a certain size and fill all items with an initial value\n   * @param {number} size\n   * @param {number} value\n   * @return {number[]}\n   */\n  function createArray(size, value) {\n    // TODO: as soon as all browsers support Array.fill, use that instead (IE doesn't support it)\n    var array = new Array(size);\n    for (var i = 0; i < size; i++) {\n      array[i] = value;\n    }\n    return array;\n  }\n  return main;\n}","map":{"version":3,"names":["clone","createRealSymmetric","_ref","config","addScalar","subtract","abs","atan","cos","sin","multiplyScalar","inv","bignumber","multiply","add","main","arr","N","prec","arguments","length","undefined","epsilon","type","diag","diagBig","TypeError","x","precision","e0","Math","psi","Sij","Array","i","createArray","Vab","getAij","_i","j","getTheta","x1","Sij1","Ei","_i2","sorting","getAijBig","_i3","getThetaBig","x1Big","Sij1Big","_i4","aii","ajj","aij","denom","PI","acos","div","theta","c","s","Ski","Skj","k","_k","_k2","Hij","c2","s2","Aki","Akj","csHij","Aii","Ajj","_k3","_k4","Mij","maxMij","maxIJ","E","S","values","vectors","minID","minE","splice","_k5","size","value","array"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/function/matrix/eigs/realSymetric.js"],"sourcesContent":["import { clone } from '../../../utils/object.js';\nexport function createRealSymmetric(_ref) {\n  var {\n    config,\n    addScalar,\n    subtract,\n    abs,\n    atan,\n    cos,\n    sin,\n    multiplyScalar,\n    inv,\n    bignumber,\n    multiply,\n    add\n  } = _ref;\n  /**\n   * @param {number[] | BigNumber[]} arr\n   * @param {number} N\n   * @param {number} prec\n   * @param {'number' | 'BigNumber'} type\n   */\n  function main(arr, N) {\n    var prec = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : config.epsilon;\n    var type = arguments.length > 3 ? arguments[3] : undefined;\n    if (type === 'number') {\n      return diag(arr, prec);\n    }\n    if (type === 'BigNumber') {\n      return diagBig(arr, prec);\n    }\n    throw TypeError('Unsupported data type: ' + type);\n  }\n\n  // diagonalization implementation for number (efficient)\n  function diag(x, precision) {\n    var N = x.length;\n    var e0 = Math.abs(precision / N);\n    var psi;\n    var Sij = new Array(N);\n    // Sij is Identity Matrix\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    }\n    // initial error\n    var Vab = getAij(x);\n    while (Math.abs(Vab[1]) >= Math.abs(e0)) {\n      var _i = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);\n      x = x1(x, psi, _i, j);\n      Sij = Sij1(Sij, psi, _i, j);\n      Vab = getAij(x);\n    }\n    var Ei = createArray(N, 0); // eigenvalues\n    for (var _i2 = 0; _i2 < N; _i2++) {\n      Ei[_i2] = x[_i2][_i2];\n    }\n    return sorting(clone(Ei), clone(Sij));\n  }\n\n  // diagonalization implementation for bigNumber\n  function diagBig(x, precision) {\n    var N = x.length;\n    var e0 = abs(precision / N);\n    var psi;\n    var Sij = new Array(N);\n    // Sij is Identity Matrix\n    for (var i = 0; i < N; i++) {\n      Sij[i] = createArray(N, 0);\n      Sij[i][i] = 1.0;\n    }\n    // initial error\n    var Vab = getAijBig(x);\n    while (abs(Vab[1]) >= abs(e0)) {\n      var _i3 = Vab[0][0];\n      var j = Vab[0][1];\n      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);\n      x = x1Big(x, psi, _i3, j);\n      Sij = Sij1Big(Sij, psi, _i3, j);\n      Vab = getAijBig(x);\n    }\n    var Ei = createArray(N, 0); // eigenvalues\n    for (var _i4 = 0; _i4 < N; _i4++) {\n      Ei[_i4] = x[_i4][_i4];\n    }\n    // return [clone(Ei), clone(Sij)]\n    return sorting(clone(Ei), clone(Sij));\n  }\n\n  // get angle\n  function getTheta(aii, ajj, aij) {\n    var denom = ajj - aii;\n    if (Math.abs(denom) <= config.epsilon) {\n      return Math.PI / 4.0;\n    } else {\n      return 0.5 * Math.atan(2.0 * aij / (ajj - aii));\n    }\n  }\n\n  // get angle\n  function getThetaBig(aii, ajj, aij) {\n    var denom = subtract(ajj, aii);\n    if (abs(denom) <= config.epsilon) {\n      return bignumber(-1).acos().div(4);\n    } else {\n      return multiplyScalar(0.5, atan(multiply(2.0, aij, inv(denom))));\n    }\n  }\n\n  // update eigvec\n  function Sij1(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var Ski = createArray(N, 0);\n    var Skj = createArray(N, 0);\n    for (var k = 0; k < N; k++) {\n      Ski[k] = c * Sij[k][i] - s * Sij[k][j];\n      Skj[k] = s * Sij[k][i] + c * Sij[k][j];\n    }\n    for (var _k = 0; _k < N; _k++) {\n      Sij[_k][i] = Ski[_k];\n      Sij[_k][j] = Skj[_k];\n    }\n    return Sij;\n  }\n  // update eigvec for overlap\n  function Sij1Big(Sij, theta, i, j) {\n    var N = Sij.length;\n    var c = cos(theta);\n    var s = sin(theta);\n    var Ski = createArray(N, bignumber(0));\n    var Skj = createArray(N, bignumber(0));\n    for (var k = 0; k < N; k++) {\n      Ski[k] = subtract(multiplyScalar(c, Sij[k][i]), multiplyScalar(s, Sij[k][j]));\n      Skj[k] = addScalar(multiplyScalar(s, Sij[k][i]), multiplyScalar(c, Sij[k][j]));\n    }\n    for (var _k2 = 0; _k2 < N; _k2++) {\n      Sij[_k2][i] = Ski[_k2];\n      Sij[_k2][j] = Skj[_k2];\n    }\n    return Sij;\n  }\n\n  // update matrix\n  function x1Big(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = bignumber(cos(theta));\n    var s = bignumber(sin(theta));\n    var c2 = multiplyScalar(c, c);\n    var s2 = multiplyScalar(s, s);\n    var Aki = createArray(N, bignumber(0));\n    var Akj = createArray(N, bignumber(0));\n    // 2cs Hij\n    var csHij = multiply(bignumber(2), c, s, Hij[i][j]);\n    //  Aii\n    var Aii = addScalar(subtract(multiplyScalar(c2, Hij[i][i]), csHij), multiplyScalar(s2, Hij[j][j]));\n    var Ajj = add(multiplyScalar(s2, Hij[i][i]), csHij, multiplyScalar(c2, Hij[j][j]));\n    // 0  to i\n    for (var k = 0; k < N; k++) {\n      Aki[k] = subtract(multiplyScalar(c, Hij[i][k]), multiplyScalar(s, Hij[j][k]));\n      Akj[k] = addScalar(multiplyScalar(s, Hij[i][k]), multiplyScalar(c, Hij[j][k]));\n    }\n    // Modify Hij\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = bignumber(0);\n    Hij[j][i] = bignumber(0);\n    // 0  to i\n    for (var _k3 = 0; _k3 < N; _k3++) {\n      if (_k3 !== i && _k3 !== j) {\n        Hij[i][_k3] = Aki[_k3];\n        Hij[_k3][i] = Aki[_k3];\n        Hij[j][_k3] = Akj[_k3];\n        Hij[_k3][j] = Akj[_k3];\n      }\n    }\n    return Hij;\n  }\n\n  // update matrix\n  function x1(Hij, theta, i, j) {\n    var N = Hij.length;\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var c2 = c * c;\n    var s2 = s * s;\n    var Aki = createArray(N, 0);\n    var Akj = createArray(N, 0);\n    //  Aii\n    var Aii = c2 * Hij[i][i] - 2 * c * s * Hij[i][j] + s2 * Hij[j][j];\n    var Ajj = s2 * Hij[i][i] + 2 * c * s * Hij[i][j] + c2 * Hij[j][j];\n    // 0  to i\n    for (var k = 0; k < N; k++) {\n      Aki[k] = c * Hij[i][k] - s * Hij[j][k];\n      Akj[k] = s * Hij[i][k] + c * Hij[j][k];\n    }\n    // Modify Hij\n    Hij[i][i] = Aii;\n    Hij[j][j] = Ajj;\n    Hij[i][j] = 0;\n    Hij[j][i] = 0;\n    // 0  to i\n    for (var _k4 = 0; _k4 < N; _k4++) {\n      if (_k4 !== i && _k4 !== j) {\n        Hij[i][_k4] = Aki[_k4];\n        Hij[_k4][i] = Aki[_k4];\n        Hij[j][_k4] = Akj[_k4];\n        Hij[_k4][j] = Akj[_k4];\n      }\n    }\n    return Hij;\n  }\n\n  // get max off-diagonal value from Upper Diagonal\n  function getAij(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (Math.abs(maxMij) < Math.abs(Mij[i][j])) {\n          maxMij = Math.abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n    return [maxIJ, maxMij];\n  }\n\n  // get max off-diagonal value from Upper Diagonal\n  function getAijBig(Mij) {\n    var N = Mij.length;\n    var maxMij = 0;\n    var maxIJ = [0, 1];\n    for (var i = 0; i < N; i++) {\n      for (var j = i + 1; j < N; j++) {\n        if (abs(maxMij) < abs(Mij[i][j])) {\n          maxMij = abs(Mij[i][j]);\n          maxIJ = [i, j];\n        }\n      }\n    }\n    return [maxIJ, maxMij];\n  }\n\n  // sort results\n  function sorting(E, S) {\n    var N = E.length;\n    var values = Array(N);\n    var vectors = Array(N);\n    for (var k = 0; k < N; k++) {\n      vectors[k] = Array(N);\n    }\n    for (var i = 0; i < N; i++) {\n      var minID = 0;\n      var minE = E[0];\n      for (var j = 0; j < E.length; j++) {\n        if (abs(E[j]) < abs(minE)) {\n          minID = j;\n          minE = E[minID];\n        }\n      }\n      values[i] = E.splice(minID, 1)[0];\n      for (var _k5 = 0; _k5 < N; _k5++) {\n        vectors[_k5][i] = S[_k5][minID];\n        S[_k5].splice(minID, 1);\n      }\n    }\n    return {\n      values,\n      vectors\n    };\n  }\n\n  /**\n   * Create an array of a certain size and fill all items with an initial value\n   * @param {number} size\n   * @param {number} value\n   * @return {number[]}\n   */\n  function createArray(size, value) {\n    // TODO: as soon as all browsers support Array.fill, use that instead (IE doesn't support it)\n    var array = new Array(size);\n    for (var i = 0; i < size; i++) {\n      array[i] = value;\n    }\n    return array;\n  }\n  return main;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}