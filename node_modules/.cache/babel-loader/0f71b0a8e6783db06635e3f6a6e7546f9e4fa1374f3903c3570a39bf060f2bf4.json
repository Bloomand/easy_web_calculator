{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createDiff } from '../../function/matrix/diff.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'diff';\nvar dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];\nexport var createDiffTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    subtract,\n    number,\n    bignumber\n  } = _ref;\n  var diff = createDiff({\n    typed,\n    matrix,\n    subtract,\n    number,\n    bignumber\n  });\n\n  /**\n   * Attach a transform function to math.diff\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return diff.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","errorTransform","createDiff","lastDimToZeroBase","name","dependencies","createDiffTransform","_ref","typed","matrix","subtract","number","bignumber","diff","any","args","apply","err","isTransformFunction"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/expression/transform/diff.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { createDiff } from '../../function/matrix/diff.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'diff';\nvar dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];\nexport var createDiffTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    matrix,\n    subtract,\n    number,\n    bignumber\n  } = _ref;\n  var diff = createDiff({\n    typed,\n    matrix,\n    subtract,\n    number,\n    bignumber\n  });\n\n  /**\n   * Attach a transform function to math.diff\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n  return typed(name, {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n      try {\n        return diff.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,IAAIC,IAAI,GAAG,MAAM;AACjB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,CAAC;AACzE,OAAO,IAAIC,mBAAmB,GAAG,eAAeN,OAAO,CAACI,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EAClF,IAAI;IACFC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,MAAM;IACNC;EACF,CAAC,GAAGL,IAAI;EACR,IAAIM,IAAI,GAAGX,UAAU,CAAC;IACpBM,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,MAAM;IACNC;EACF,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;EACE,OAAOJ,KAAK,CAACJ,IAAI,EAAE;IACjB,QAAQ,EAAE,SAASU,GAAGA,CAACC,IAAI,EAAE;MAC3BA,IAAI,GAAGZ,iBAAiB,CAACY,IAAI,CAAC;MAC9B,IAAI;QACF,OAAOF,IAAI,CAACG,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,MAAMhB,cAAc,CAACgB,GAAG,CAAC;MAC3B;IACF;EACF,CAAC,CAAC;AACJ,CAAC,EAAE;EACDC,mBAAmB,EAAE;AACvB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}