{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { isMatrix } from '../../utils/is.js';\nimport { clone } from '../../utils/object.js';\nimport { validateIndex } from '../../utils/array.js';\nvar name = 'row';\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\nexport var createRow = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    Index,\n    matrix,\n    range\n  } = _ref;\n  /**\n   * Return a row from a Matrix.\n   *\n   * Syntax:\n   *\n   *     math.row(value, index)\n   *\n   * Example:\n   *\n   *     // get a row\n   *     const d = [[1, 2], [3, 4]]\n   *     math.row(d, 1) // returns [[3, 4]]\n   *\n   * See also:\n   *\n   *     column\n   *\n   * @param {Array | Matrix } value   An array or matrix\n   * @param {number} row              The index of the row\n   * @return {Array | Matrix}         The retrieved row\n   */\n  return typed(name, {\n    'Matrix, number': _row,\n    'Array, number': function ArrayNumber(value, row) {\n      return _row(matrix(clone(value)), row).valueOf();\n    }\n  });\n\n  /**\n   * Retrieve a row of a matrix\n   * @param {Matrix } value  A matrix\n   * @param {number} row     The index of the row\n   * @return {Matrix}        The retrieved row\n   */\n  function _row(value, row) {\n    // check dimensions\n    if (value.size().length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    validateIndex(row, value.size()[0]);\n    var columnRange = range(0, value.size()[1]);\n    var index = new Index(row, columnRange);\n    var result = value.subset(index);\n    return isMatrix(result) ? result : matrix([[result]]);\n  }\n});","map":{"version":3,"names":["factory","isMatrix","clone","validateIndex","name","dependencies","createRow","_ref","typed","Index","matrix","range","_row","ArrayNumber","value","row","valueOf","size","length","Error","columnRange","index","result","subset"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/function/matrix/row.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { isMatrix } from '../../utils/is.js';\nimport { clone } from '../../utils/object.js';\nimport { validateIndex } from '../../utils/array.js';\nvar name = 'row';\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\nexport var createRow = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    Index,\n    matrix,\n    range\n  } = _ref;\n  /**\n   * Return a row from a Matrix.\n   *\n   * Syntax:\n   *\n   *     math.row(value, index)\n   *\n   * Example:\n   *\n   *     // get a row\n   *     const d = [[1, 2], [3, 4]]\n   *     math.row(d, 1) // returns [[3, 4]]\n   *\n   * See also:\n   *\n   *     column\n   *\n   * @param {Array | Matrix } value   An array or matrix\n   * @param {number} row              The index of the row\n   * @return {Array | Matrix}         The retrieved row\n   */\n  return typed(name, {\n    'Matrix, number': _row,\n    'Array, number': function ArrayNumber(value, row) {\n      return _row(matrix(clone(value)), row).valueOf();\n    }\n  });\n\n  /**\n   * Retrieve a row of a matrix\n   * @param {Matrix } value  A matrix\n   * @param {number} row     The index of the row\n   * @return {Matrix}        The retrieved row\n   */\n  function _row(value, row) {\n    // check dimensions\n    if (value.size().length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    validateIndex(row, value.size()[0]);\n    var columnRange = range(0, value.size()[1]);\n    var index = new Index(row, columnRange);\n    var result = value.subset(index);\n    return isMatrix(result) ? result : matrix([[result]]);\n  }\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,IAAIC,IAAI,GAAG,KAAK;AAChB,IAAIC,YAAY,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;AACxD,OAAO,IAAIC,SAAS,GAAG,eAAeN,OAAO,CAACI,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EACxE,IAAI;IACFC,KAAK;IACLC,KAAK;IACLC,MAAM;IACNC;EACF,CAAC,GAAGJ,IAAI;EACR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOC,KAAK,CAACJ,IAAI,EAAE;IACjB,gBAAgB,EAAEQ,IAAI;IACtB,eAAe,EAAE,SAASC,WAAWA,CAACC,KAAK,EAAEC,GAAG,EAAE;MAChD,OAAOH,IAAI,CAACF,MAAM,CAACR,KAAK,CAACY,KAAK,CAAC,CAAC,EAAEC,GAAG,CAAC,CAACC,OAAO,EAAE;IAClD;EACF,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;AACA;EACE,SAASJ,IAAIA,CAACE,KAAK,EAAEC,GAAG,EAAE;IACxB;IACA,IAAID,KAAK,CAACG,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;IAC7D;IACAhB,aAAa,CAACY,GAAG,EAAED,KAAK,CAACG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACnC,IAAIG,WAAW,GAAGT,KAAK,CAAC,CAAC,EAAEG,KAAK,CAACG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAII,KAAK,GAAG,IAAIZ,KAAK,CAACM,GAAG,EAAEK,WAAW,CAAC;IACvC,IAAIE,MAAM,GAAGR,KAAK,CAACS,MAAM,CAACF,KAAK,CAAC;IAChC,OAAOpB,QAAQ,CAACqB,MAAM,CAAC,GAAGA,MAAM,GAAGZ,MAAM,CAAC,CAAC,CAACY,MAAM,CAAC,CAAC,CAAC;EACvD;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}