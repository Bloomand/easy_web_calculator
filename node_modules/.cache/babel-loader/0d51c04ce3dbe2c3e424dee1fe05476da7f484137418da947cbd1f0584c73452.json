{"ast":null,"code":"import { factory } from '../utils/factory.js';\nvar name = 'reviver';\nvar dependencies = ['classes'];\nexport var createReviver = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    classes\n  } = _ref;\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  return function reviver(key, value) {\n    var constructor = classes[value && value.mathjs];\n    if (constructor && typeof constructor.fromJSON === 'function') {\n      return constructor.fromJSON(value);\n    }\n    return value;\n  };\n});","map":{"version":3,"names":["factory","name","dependencies","createReviver","_ref","classes","reviver","key","value","constructor","mathjs","fromJSON"],"sources":["/Users/alexgeldash/Projects/calculator/node_modules/mathjs/lib/esm/json/reviver.js"],"sourcesContent":["import { factory } from '../utils/factory.js';\nvar name = 'reviver';\nvar dependencies = ['classes'];\nexport var createReviver = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    classes\n  } = _ref;\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  return function reviver(key, value) {\n    var constructor = classes[value && value.mathjs];\n    if (constructor && typeof constructor.fromJSON === 'function') {\n      return constructor.fromJSON(value);\n    }\n    return value;\n  };\n});"],"mappings":"AAAA,SAASA,OAAO,QAAQ,qBAAqB;AAC7C,IAAIC,IAAI,GAAG,SAAS;AACpB,IAAIC,YAAY,GAAG,CAAC,SAAS,CAAC;AAC9B,OAAO,IAAIC,aAAa,GAAG,eAAeH,OAAO,CAACC,IAAI,EAAEC,YAAY,EAAEE,IAAI,IAAI;EAC5E,IAAI;IACFC;EACF,CAAC,GAAGD,IAAI;EACR;AACF;AACA;AACA;AACA;AACA;EACE,OAAO,SAASE,OAAOA,CAACC,GAAG,EAAEC,KAAK,EAAE;IAClC,IAAIC,WAAW,GAAGJ,OAAO,CAACG,KAAK,IAAIA,KAAK,CAACE,MAAM,CAAC;IAChD,IAAID,WAAW,IAAI,OAAOA,WAAW,CAACE,QAAQ,KAAK,UAAU,EAAE;MAC7D,OAAOF,WAAW,CAACE,QAAQ,CAACH,KAAK,CAAC;IACpC;IACA,OAAOA,KAAK;EACd,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}